// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/project/project.proto

package project

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	model "github.com/vsjcloud/beaver/cathedral/generated/proto/model"
	common "github.com/vsjcloud/beaver/cathedral/generated/proto/rpc/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateProjectRequest struct {
	Project              *model.Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateProjectRequest) Reset()         { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()    {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b29952f92ab12fc8, []int{0}
}

func (m *CreateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectRequest.Unmarshal(m, b)
}
func (m *CreateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectRequest.Merge(m, src)
}
func (m *CreateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectRequest.Size(m)
}
func (m *CreateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectRequest proto.InternalMessageInfo

func (m *CreateProjectRequest) GetProject() *model.Project {
	if m != nil {
		return m.Project
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateProjectRequest)(nil), "project.CreateProjectRequest")
}

func init() { proto.RegisterFile("rpc/project/project.proto", fileDescriptor_b29952f92ab12fc8) }

var fileDescriptor_b29952f92ab12fc8 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x3f, 0x4b, 0x04, 0x31,
	0x10, 0xc5, 0xb9, 0xe6, 0x84, 0x08, 0x57, 0xac, 0x16, 0xba, 0xa0, 0x88, 0xd5, 0x55, 0x19, 0x38,
	0xbf, 0xc0, 0x71, 0x16, 0xd7, 0xca, 0x59, 0x69, 0x97, 0x4d, 0x1e, 0xf7, 0x87, 0xec, 0x4e, 0x9c,
	0x64, 0xf7, 0xf3, 0x8b, 0xd9, 0x04, 0x14, 0xac, 0x42, 0xe6, 0xbd, 0xf7, 0xcb, 0xcb, 0xa8, 0x7b,
	0x09, 0x96, 0x82, 0xf0, 0x05, 0x36, 0xd5, 0x53, 0x07, 0xe1, 0xc4, 0xcd, 0x55, 0xb9, 0xb6, 0x37,
	0x3d, 0x3b, 0xf8, 0xbf, 0x6a, 0x9b, 0x83, 0x96, 0xfb, 0x9e, 0x07, 0x12, 0xc4, 0xc0, 0x43, 0xc4,
	0x2c, 0x3d, 0x6f, 0xd5, 0xed, 0xab, 0xc0, 0x24, 0xbc, 0xcd, 0x89, 0x03, 0xbe, 0x46, 0xc4, 0xd4,
	0xac, 0x55, 0x45, 0xde, 0x2d, 0x9e, 0x16, 0xeb, 0xeb, 0xcd, 0x4a, 0x67, 0xb2, 0xae, 0xbe, 0x2a,
	0x6f, 0x3e, 0xd4, 0xaa, 0xcc, 0xde, 0x21, 0xd3, 0xd9, 0xa2, 0xd9, 0xab, 0xa5, 0xcd, 0xcc, 0xe6,
	0x41, 0xd7, 0x22, 0xff, 0x3d, 0xd2, 0x3e, 0xea, 0xb9, 0x94, 0xde, 0x63, 0x80, 0x18, 0x5f, 0x00,
	0x87, 0x52, 0x71, 0xb7, 0xfb, 0xdc, 0x1e, 0xcf, 0xe9, 0x34, 0x76, 0x3f, 0x3e, 0x9a, 0xe2, 0xc5,
	0x7a, 0x1e, 0x1d, 0x75, 0x30, 0x13, 0x84, 0xac, 0x49, 0x27, 0x38, 0x31, 0x9e, 0x8e, 0x39, 0x9e,
	0xe0, 0x28, 0x7f, 0x8a, 0x7e, 0xed, 0xa9, 0x5b, 0xe6, 0xd1, 0xcb, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x2b, 0x69, 0xab, 0x6e, 0x3d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProjectServiceClient is the client API for ProjectService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectServiceClient interface {
	Create(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*common.GeneralServiceResponse, error)
}

type projectServiceClient struct {
	cc *grpc.ClientConn
}

func NewProjectServiceClient(cc *grpc.ClientConn) ProjectServiceClient {
	return &projectServiceClient{cc}
}

func (c *projectServiceClient) Create(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*common.GeneralServiceResponse, error) {
	out := new(common.GeneralServiceResponse)
	err := c.cc.Invoke(ctx, "/project.ProjectService/create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectServiceServer is the server API for ProjectService service.
type ProjectServiceServer interface {
	Create(context.Context, *CreateProjectRequest) (*common.GeneralServiceResponse, error)
}

// UnimplementedProjectServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProjectServiceServer struct {
}

func (*UnimplementedProjectServiceServer) Create(ctx context.Context, req *CreateProjectRequest) (*common.GeneralServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}

func RegisterProjectServiceServer(s *grpc.Server, srv ProjectServiceServer) {
	s.RegisterService(&_ProjectService_serviceDesc, srv)
}

func _ProjectService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.ProjectService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).Create(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProjectService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "project.ProjectService",
	HandlerType: (*ProjectServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "create",
			Handler:    _ProjectService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/project/project.proto",
}
