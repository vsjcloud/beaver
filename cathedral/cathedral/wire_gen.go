// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package cathedral

import (
	"github.com/vsjcloud/beaver/cathedral/common/auth"
	"github.com/vsjcloud/beaver/cathedral/common/config"
	"github.com/vsjcloud/beaver/cathedral/modules/photo"
	"github.com/vsjcloud/beaver/cathedral/modules/project"
	"github.com/vsjcloud/beaver/cathedral/modules/sagrada"
	"github.com/vsjcloud/beaver/cathedral/modules/store/modelstore"
	"go.uber.org/zap"
)

// Injectors from wire.go:

func initializeModuleSet(cathedralConfig *config.Cathedral, logger *zap.Logger) (*ModuleSet, error) {
	configAuth := cathedralConfig.Auth
	authAuth := auth.NewAuth(configAuth)
	modelStore := cathedralConfig.ModelStore
	store, err := modelstore.NewModelStore(modelStore)
	if err != nil {
		return nil, err
	}
	service := cathedralConfig.Service
	projectService, err := project.NewService(service, store)
	if err != nil {
		return nil, err
	}
	configPhoto := cathedralConfig.Photo
	photoService, err := photo.NewService(service, configPhoto, logger, authAuth, store)
	if err != nil {
		return nil, err
	}
	sagradaService := sagrada.NewService(store)
	moduleSet := &ModuleSet{
		Config:         cathedralConfig,
		Logger:         logger,
		Auth:           authAuth,
		ModelStore:     store,
		ProjectService: projectService,
		PhotoService:   photoService,
		SagradaService: sagradaService,
	}
	return moduleSet, nil
}
