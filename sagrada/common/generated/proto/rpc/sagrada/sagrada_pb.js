/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var model_photo_pb = require('../../model/photo_pb.js');
goog.object.extend(proto, model_photo_pb);
var model_project_pb = require('../../model/project_pb.js');
goog.object.extend(proto, model_project_pb);
goog.exportSymbol('proto.sagrada.GetProjectDirectoryPagePropsResponse', null, global);
goog.exportSymbol('proto.sagrada.GetProjectPagePropsRequest', null, global);
goog.exportSymbol('proto.sagrada.GetProjectPagePropsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sagrada.GetProjectDirectoryPagePropsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sagrada.GetProjectDirectoryPagePropsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sagrada.GetProjectDirectoryPagePropsResponse.displayName = 'proto.sagrada.GetProjectDirectoryPagePropsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sagrada.GetProjectPagePropsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sagrada.GetProjectPagePropsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sagrada.GetProjectPagePropsRequest.displayName = 'proto.sagrada.GetProjectPagePropsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sagrada.GetProjectPagePropsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sagrada.GetProjectPagePropsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sagrada.GetProjectPagePropsResponse.displayName = 'proto.sagrada.GetProjectPagePropsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sagrada.GetProjectDirectoryPagePropsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sagrada.GetProjectDirectoryPagePropsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sagrada.GetProjectDirectoryPagePropsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagrada.GetProjectDirectoryPagePropsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectsMap: (f = msg.getProjectsMap()) ? f.toObject(includeInstance, proto.model.Project.toObject) : [],
    photosMap: (f = msg.getPhotosMap()) ? f.toObject(includeInstance, proto.model.Photo.toObject) : [],
    projecttagsMap: (f = msg.getProjecttagsMap()) ? f.toObject(includeInstance, proto.model.ProjectTag.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sagrada.GetProjectDirectoryPagePropsResponse}
 */
proto.sagrada.GetProjectDirectoryPagePropsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sagrada.GetProjectDirectoryPagePropsResponse;
  return proto.sagrada.GetProjectDirectoryPagePropsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sagrada.GetProjectDirectoryPagePropsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sagrada.GetProjectDirectoryPagePropsResponse}
 */
proto.sagrada.GetProjectDirectoryPagePropsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getProjectsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.model.Project.deserializeBinaryFromReader, "");
         });
      break;
    case 2:
      var value = msg.getPhotosMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.model.Photo.deserializeBinaryFromReader, "");
         });
      break;
    case 3:
      var value = msg.getProjecttagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.model.ProjectTag.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sagrada.GetProjectDirectoryPagePropsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sagrada.GetProjectDirectoryPagePropsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sagrada.GetProjectDirectoryPagePropsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagrada.GetProjectDirectoryPagePropsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.model.Project.serializeBinaryToWriter);
  }
  f = message.getPhotosMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.model.Photo.serializeBinaryToWriter);
  }
  f = message.getProjecttagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.model.ProjectTag.serializeBinaryToWriter);
  }
};


/**
 * map<string, model.Project> projects = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.model.Project>}
 */
proto.sagrada.GetProjectDirectoryPagePropsResponse.prototype.getProjectsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.model.Project>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.model.Project));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.sagrada.GetProjectDirectoryPagePropsResponse.prototype.clearProjectsMap = function() {
  this.getProjectsMap().clear();
};


/**
 * map<string, model.Photo> photos = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.model.Photo>}
 */
proto.sagrada.GetProjectDirectoryPagePropsResponse.prototype.getPhotosMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.model.Photo>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.model.Photo));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.sagrada.GetProjectDirectoryPagePropsResponse.prototype.clearPhotosMap = function() {
  this.getPhotosMap().clear();
};


/**
 * map<string, model.ProjectTag> projectTags = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.model.ProjectTag>}
 */
proto.sagrada.GetProjectDirectoryPagePropsResponse.prototype.getProjecttagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.model.ProjectTag>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.model.ProjectTag));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.sagrada.GetProjectDirectoryPagePropsResponse.prototype.clearProjecttagsMap = function() {
  this.getProjecttagsMap().clear();
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sagrada.GetProjectPagePropsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sagrada.GetProjectPagePropsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sagrada.GetProjectPagePropsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagrada.GetProjectPagePropsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sagrada.GetProjectPagePropsRequest}
 */
proto.sagrada.GetProjectPagePropsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sagrada.GetProjectPagePropsRequest;
  return proto.sagrada.GetProjectPagePropsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sagrada.GetProjectPagePropsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sagrada.GetProjectPagePropsRequest}
 */
proto.sagrada.GetProjectPagePropsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sagrada.GetProjectPagePropsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sagrada.GetProjectPagePropsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sagrada.GetProjectPagePropsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagrada.GetProjectPagePropsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string projectID = 1;
 * @return {string}
 */
proto.sagrada.GetProjectPagePropsRequest.prototype.getProjectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sagrada.GetProjectPagePropsRequest.prototype.setProjectid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sagrada.GetProjectPagePropsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sagrada.GetProjectPagePropsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sagrada.GetProjectPagePropsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagrada.GetProjectPagePropsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: (f = msg.getProject()) && model_project_pb.Project.toObject(includeInstance, f),
    photosMap: (f = msg.getPhotosMap()) ? f.toObject(includeInstance, proto.model.Photo.toObject) : [],
    projecttagsMap: (f = msg.getProjecttagsMap()) ? f.toObject(includeInstance, proto.model.ProjectTag.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sagrada.GetProjectPagePropsResponse}
 */
proto.sagrada.GetProjectPagePropsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sagrada.GetProjectPagePropsResponse;
  return proto.sagrada.GetProjectPagePropsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sagrada.GetProjectPagePropsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sagrada.GetProjectPagePropsResponse}
 */
proto.sagrada.GetProjectPagePropsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_project_pb.Project;
      reader.readMessage(value,model_project_pb.Project.deserializeBinaryFromReader);
      msg.setProject(value);
      break;
    case 2:
      var value = msg.getPhotosMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.model.Photo.deserializeBinaryFromReader, "");
         });
      break;
    case 3:
      var value = msg.getProjecttagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.model.ProjectTag.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sagrada.GetProjectPagePropsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sagrada.GetProjectPagePropsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sagrada.GetProjectPagePropsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagrada.GetProjectPagePropsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      model_project_pb.Project.serializeBinaryToWriter
    );
  }
  f = message.getPhotosMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.model.Photo.serializeBinaryToWriter);
  }
  f = message.getProjecttagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.model.ProjectTag.serializeBinaryToWriter);
  }
};


/**
 * optional model.Project project = 1;
 * @return {?proto.model.Project}
 */
proto.sagrada.GetProjectPagePropsResponse.prototype.getProject = function() {
  return /** @type{?proto.model.Project} */ (
    jspb.Message.getWrapperField(this, model_project_pb.Project, 1));
};


/** @param {?proto.model.Project|undefined} value */
proto.sagrada.GetProjectPagePropsResponse.prototype.setProject = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sagrada.GetProjectPagePropsResponse.prototype.clearProject = function() {
  this.setProject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sagrada.GetProjectPagePropsResponse.prototype.hasProject = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, model.Photo> photos = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.model.Photo>}
 */
proto.sagrada.GetProjectPagePropsResponse.prototype.getPhotosMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.model.Photo>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.model.Photo));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.sagrada.GetProjectPagePropsResponse.prototype.clearPhotosMap = function() {
  this.getPhotosMap().clear();
};


/**
 * map<string, model.ProjectTag> projectTags = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.model.ProjectTag>}
 */
proto.sagrada.GetProjectPagePropsResponse.prototype.getProjecttagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.model.ProjectTag>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.model.ProjectTag));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.sagrada.GetProjectPagePropsResponse.prototype.clearProjecttagsMap = function() {
  this.getProjecttagsMap().clear();
};


goog.object.extend(exports, proto.sagrada);
