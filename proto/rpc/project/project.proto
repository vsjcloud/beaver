syntax = "proto3";
package project;
option go_package = "github.com/vsjcloud/beaver/cathedral/generated/proto/rpc/project";

import "google/protobuf/empty.proto";
import "model/project.proto";
import "rpc/common/response.proto";

service ProjectService {
    rpc createProject (google.protobuf.Empty) returns (CreateProjectResponse);
    rpc getProjectTags (google.protobuf.Empty) returns (GetProjectTagsResponse);
    rpc createProjectTag (CreateProjectTagRequest) returns (CreateProjectTagResponse);
    rpc updateProjectTag (UpdateProjectTagRequest) returns (common.GeneralServiceResponse);
    rpc getArchivedProjectTagDirectory (google.protobuf.Empty) returns (GetArchivedProjectTagDirectoryResponse);
    rpc archiveProjectTag (ArchiveProjectTagRequest) returns (common.GeneralServiceResponse);
    rpc recoverProjectTag (RecoverProjectTagRequest) returns (common.GeneralServiceResponse);
    rpc getProjectWithSwap (GetProjectWithSwapRequest) returns (GetProjectWithSwapResponse);
    rpc getProjectsWithSwap (google.protobuf.Empty) returns (GetProjectsWithSwapResponse);
    rpc updateProjectSwap (UpdateProjectSwapRequest) returns (common.GeneralServiceResponse);
    rpc deleteProjectSwap (DeleteProjectSwapRequest) returns (common.GeneralServiceResponse);
    rpc updateProjectAndRemoveSwap (UpdateProjectAndRemoveSwapRequest) returns (common.GeneralServiceResponse);
    rpc getArchivedProjectDirectory (google.protobuf.Empty) returns (GetArchivedProjectDirectoryResponse);
    rpc archiveProject (ArchiveProjectRequest) returns (common.GeneralServiceResponse);
    rpc recoverProject (RecoverProjectRequest) returns (common.GeneralServiceResponse);
}

message CreateProjectResponse {
    string projectID = 1;
}

message GetProjectTagsResponse {
    map<string, model.ProjectTag> tags = 1;
}

message CreateProjectTagRequest {
    model.ProjectTag projectTag = 1;
}

message UpdateProjectTagRequest {
    string projectTagID = 1;
    model.ProjectTag projectTag = 2;
}

message CreateProjectTagResponse {
    string projectTagID = 1;
}

message GetArchivedProjectTagDirectoryResponse {
    model.ArchivedProjectTagDirectory archivedProjectTagDirectory = 1;
}

message ArchiveProjectTagRequest {
    string projectTagID = 1;
}

message RecoverProjectTagRequest {
    string projectTagID = 1;
}

message GetProjectWithSwapRequest {
    string projectID = 1;
}

message GetProjectWithSwapResponse {
    model.Project project = 1;
    model.Project swap = 2;
}

message GetProjectsWithSwapResponse {
    map<string, model.Project> projects = 1;
    map<string, model.Project> swaps = 2;
}

message UpdateProjectSwapRequest {
    string swapID = 1;
    model.Project swap = 2;
}

message DeleteProjectSwapRequest {
    string swapID = 1;
}

message UpdateProjectAndRemoveSwapRequest {
    string projectID = 1;
    model.Project project = 2;
}

message GetArchivedProjectDirectoryResponse {
    model.ArchivedProjectDirectory archivedProjectDirectory = 1;
}

message ArchiveProjectRequest {
    string projectID = 1;
}

message RecoverProjectRequest {
    string projectID = 1;
}
